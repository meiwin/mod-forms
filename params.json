{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Mod-forms","body":"# Form helper module for play 2\r\n\r\nThis module extends the built-in Form mappings of Play (Scala) framework.\r\n\r\n## Add to your project:\r\n\r\nConfigure resolver:\r\n\r\n```scala\r\nresolvers += \"blockthirty releases\" at \"https://raw.github.com/meiwin/m2repo/master/releases/\"\r\n```\r\n\r\nAdd library dependency:\r\n\r\n```scala\r\nlibraryDepedencies += \"blockthirty\" %% \"mod-forms\" % \"1.0.0\"\r\n```\r\n\r\n## How to use\r\n\r\n### Keyed mapping\r\n\r\nAdd supports for `keyed mapping` to Form, example:\r\n\r\n```scala\r\n...\r\nimport util.Forms._\r\n\r\n...\r\n\r\ndef index = Action { implicit request =>\r\n\r\n    // settings is a `Map[String, String]`\r\n    // for request parameters, e.g.\r\n    // - settings[s1] = 'abc'\r\n    // - settings[s2] = 'def'\r\n    // then settings will be a map = { \"s1\" -> \"abc\", \"s2\" -> \"def\" }\r\n    val settings = Form(\r\n        \"settings\" -> keyed(nonEmptyText)\r\n    ).bindFromRequest.get\r\n\r\n    ...\r\n    ...\r\n}\r\n```\r\n","tagline":"Play helper module that extends built-in Play (scala) form mappings and validations."}